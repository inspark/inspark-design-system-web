@import "./variables";

/* ==========================================================================
   #RATIO
   ========================================================================== */

/*
Ratio

Create ratio-bound content blocks, to keep media (e.g. images, videos) in their correct aspect ratios.

 http://alistapart.com/article/creating-intrinsic-ratios-for-video

1. Default cropping is a 1:1 ratio (i.e. a perfect square).

markup:
<div>Default ratio object (1:1)</div>
<div class="o-ratio">
  <div class="o-ratio__content" style="background: #ccc;">
    <img src="http://www.uniwallpaper.com/static/images/6890733-mountain-peaks-wallpaper-hd_PZTQDff.jpg" alt="thmthg" style="max-width: none; max-height: 100%;/>
  </div>
</div>
<div>16:9 object</div>
<div class="o-ratio o-ratio_16:9">
  <iframe width="560" height="315" src="https://www.youtube.com/embed/y_NjiRiMWRM" frameborder="0" allowfullscreen></iframe>
</div>

Styleguide 5.9
*/

/**
 * Create ratio-bound content blocks, to keep media (e.g. images, videos) in
 * their correct aspect ratios.
 *
 * http://alistapart.com/article/creating-intrinsic-ratios-for-video
 *
 * 1. Default cropping is a 1:1 ratio (i.e. a perfect square).
 */

@mixin ids-ratio {

  .o-ratio {
    position: relative;
    display: block;
    overflow: hidden;

    &:before {
      content: "";
      display: block;
      width: 100%;
      padding-bottom: 100%; /* [1] */
    }

  }

  .o-ratio__content,
  .o-ratio > iframe,
  .o-ratio > embed,
  .o-ratio > object {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    height: 100%;
    width: 100%;
  }

}

/* stylelint-disable */

/* Ratio variants.
   ========================================================================== */

/**
 * Generate a series of ratio classes to be used like so:
 *
 *   <div class="o-ratio  o-ratio_16:9">
 *
 */

@mixin ids-ratio-variants {

  @each $ratio in $inuit-ratios {

    @each $antecedent, $consequent in $ratio {

      @if (type-of($antecedent) != number) {
        @error "`#{$antecedent}` needs to be a number."
      }

      @if (type-of($consequent) != number) {
        @error "`#{$consequent}` needs to be a number."
      }

      .o-ratio_#{$antecedent}\:#{$consequent}:before {
        padding-bottom: ($consequent/$antecedent) * 100%;
      }

    }

  }

}

/* stylelint-enable */

@mixin ids-ratio-core-styles {
  @include ids-ratio;
  @include ids-ratio-variants;
}
